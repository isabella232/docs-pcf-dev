---
breadcrumb: PCF Dev Documentation
title: Frequently Asked Questions
owner: PCF Dev
---

## <a id="ssl_cert"></a> Why do I receive a "Invalid SSL Cert" error?

<pre class='terminal'>
$ cf api api.dev.cfdev.sh
Setting api endpoint to api.dev.cfdev.sh...
FAILED
Invalid SSL Cert for api.dev.cfdev.sh
TIP: Use 'cf api --skip-ssl-validation' to continue with an insecure API endpoint
</pre>

PCF Dev comes with a self-signed SSL certificate for its API. The self-signed SSL certificate causes an `Invalid SSL Cert` error when using the cf CLI. To avoid the error, use the `--skip-ssl-validation` option.

## <a id="host"></a> How can I connect apps running in PCF Dev to services running on my workstation?

PCF Dev provides a special hostname for addressing the host from inside of application containers.
If the PCF Dev system domain is `dev.cfdev.sh`, then the host will be routable at `host.cfdev.sh`.
Services running on the host must be listening on all network interfaces (not just `localhost`) for apps to access them.

<p class="note"><strong>Note</strong>: Using <code>localhost</code> inside of app containers will not refer to your workstation.</p>

## <a id="memory"></a> How can I customize the memory and CPU count used by PCF Dev ?

By default, PCF Dev allocates 8GB of memory to run.

To change the allocated memory, run the following command, replacing `NEW-ALLOCATED-MEMORY` with the amount of memory you want to allocate in megabytes:

```
cf dev start -m NEW-ALLOCATED-MEMORY
```

By default, PCF Dev tries to use 4 cores. To change this setting, run the following command, replacing `DESIRED-NUMBER-OF-CORES` with the number of processor cores PCF Dev should use:

```
cf dev start -c DESIRED-NUMBER-OF-CORES
```

## <a id="security_groups"></a> How are Application Security Groups (ASGs) configured in PCF Dev?

Unlike PCF, PCF Dev allows applications to access all private address ranges without the need for additional ASGs.
This is because PCF Dev is considered a trusted, local environment.
You can remove the `all_pcfdev` security group:

<pre class='terminal'>
$ cf unbind-running-security-group all_pcfdev
Unbinding security group all_pcfdev from defaults for running as admin
OK
TIP: Changes will not apply to existing running applications until they are restarted.
$ cf unbind-staging-security-group all_pcfdev
Unbinding security group all_pcfdev from defaults for staging as admin
OK
TIP: Changes will not apply to existing running applications until they are restarted.
</pre>