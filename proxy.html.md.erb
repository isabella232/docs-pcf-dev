---
breadcrumb: Pivotal Platform Dev Documentation
title: Using Pivotal Platform Dev Behind a Proxy
owner: Pivotal Platform Dev
---

<strong><%= modified_date %></strong>

This topic describes how to use <%= vars.platform_name %> Dev with a proxy.


## <a id="overview"></a> Overview

In a restricted network environment, configuring <%= vars.platform_name %> Dev to connect to an HTTP proxy permits app-to-Internet connectivity, access to custom buildpacks, and the use of Docker images from the public Internet.


## <a id="run-behind-proxy"></a> Run <%= vars.platform_name %> Dev Behind an HTTP Proxy

To run <%= vars.platform_name %> Dev behind a proxy, you must set the standard proxy environment variables for your platform before you start <%= vars.platform_name %> Dev.

<p class="note"><strong>Note:</strong> Proxy Support is not currently supported on Linux. That means the environment variables `HTTP_PROXY, HTTPS_PROXY, NO_PROXY`, are not fully supported. Proxy Support on Linux is only supported in <%= vars.platform_name %> Dev v0.30 and earlier.</p>

To set the standard proxy environment variables for your platform:

1. Run one of the following sets of commands:

    * For Mac OS X:

        ```
        HTTP_PROXY=http://PROXY-IP:PROXY-PORT \
        HTTPS_PROXY=http://PROXY-IP:PROXY-PORT \
        cf dev start
        ```
        
        Where:
        * `PROXY-IP` is the IP address of your proxy.
        * `PROXY-PORT` is the port of your proxy.
    
    * For Windows PowerShell:

        ```
        $env:HTTP_PROXY = "http://PROXY-IP:PROXY-PORT"
        $env:HTTPS_PROXY = "http://PROXY-IP:PROXY-PORT"
        cf dev start
        ```
        
        Where:
        * `PROXY-IP` is the IP address of your proxy.
        * `PROXY-PORT` is the port of your proxy.

<p class="note"><strong>Note:</strong> Do not use <code>localhost</code> for <code>PROXY-IP</code> or as the proxy server hostname, because <code>localhost</code> refers to the <%= vars.platform_name %> Dev VM itself. If <%= vars.platform_name %> Dev needs to use a locally-running HTTP proxy, the proxy must be listening on all network interfaces, and you must address it as <code>host.cfdev.sh</code>. For a system domain <code>dev.cfdev.sh</code>, address the proxy as <code>host.cfdev.sh</code>, and so on.</p>


## <a id="allow-cf-cli-behind-proxy"></a> Use the cf CLI Behind an HTTP Proxy

You must configure the cf CLI to bypass your HTTP proxy for addresses that end in `local.pcfdev.io`, which is your system domain. To configure the cf CLI:

1. Run one of the following sets of commands:
    * For Mac OS X:
      
      ```
      export NO_PROXY=.dev.cfdev.sh,dev.cfdev.sh,$NO_PROXY
      cf login -a https://api.dev.cfdev.sh --skip-ssl-validation
      ```
    * For Windows PowerShell:

      ```
      $env:NO_PROXY = ".dev.cfdev.sh,dev.cfdev.sh,OTHER-DOMAINS"
      cf login -a https://api.ldev.cfdev.sh --skip-ssl-validation
      ```


## <a id="allow-traffic-behind-proxy"></a> Allow App Traffic to Bypass the Proxy

You can configure your apps to connect to other addresses without using the proxy. For example, you can connect apps to user-provided services on a private network.

To configure your apps to connect to other addresses without a proxy:

1. Set the `NO_PROXY` environment variable to a comma-separated list of hosts by running:

    ```
    cf set-env APP-NAME NO\_PROXY=192.0.2.54,198.51.100.34
    ```
    Where `APP-NAME` is the name of the app you want to configure to connect to other addresses without a proxy.
